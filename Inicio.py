import streamlit as st

st.set_page_config(page_title="Regresi√≥n Log√≠stica")
st.title("Regresi√≥n Log√≠stica")

st.write("""
Es un m√©todo estad√≠stico utilizado para modelar problemas de clasificaci√≥n binaria, donde el resultado es una de dos posibles categor√≠as, como *s√≠* o *no*, *verdadero* o *falso*. A diferencia de la regresi√≥n lineal, que predice valores continuos, la regresi√≥n log√≠stica estima la probabilidad de que una instancia pertenezca a una clase determinada.
""")

# Aqu√≠ puedes insertar una imagen que ilustre un ejemplo de clasificaci√≥n binaria, como separar puntos en un plano seg√∫n dos categor√≠as.

# Fundamentos Matem√°ticos
st.header("Fundamentos Matem√°ticos")

st.subheader("La Funci√≥n Sigmoide")

st.write("""
El n√∫cleo de la regresi√≥n log√≠stica es la **funci√≥n sigmoide** o log√≠stica, que transforma cualquier valor real en un valor entre 0 y 1, interpretado como una probabilidad.
""")

col1, col2, col3 = st.columns([1, 2, 1])

with col1:
    st.write('')  # Columna vac√≠a

with col2:
    st.image('static/regresion_logistica/sigmoide1.png')
    st.write("""
*donde \( z \) es una combinaci√≥n lineal de las variables independientes.*
""")
with col3:
    st.write('')  # Columna vac√≠a

st.write("Si representa esta ecuaci√≥n de regresi√≥n log√≠stica, obtendr√° una curva en S como la que se muestra a continuaci√≥n.")
st.image('static/regresion_logistica/grafica-sigmoide.png')
st.write("Devuelve solo valores entre 0 y 1 para la variable dependiente, al margen de los valores de la variable independiente. As√≠ es como la regresi√≥n log√≠stica estima el valor de la variable dependiente.")


# Aqu√≠ debes incluir la f√≥rmula anterior y, si es posible, un gr√°fico de la funci√≥n sigmoide mostrando c√≥mo transforma valores desde el eje real al intervalo (0,1).

st.subheader("Modelo de Regresi√≥n Log√≠stica")

st.write("""
El modelo matem√°tico se expresa como:

""")

col1, col2, col3 = st.columns([1, 2, 1])
with col1:
    st.write('')

with col2:
    st.image("static/regresion_logistica/modelo.png")
with col3:
    st.write('')



st.write("""
*donde:*

- P(Y=1‚à£X) es la probabilidad de que el resultado sea la clase 1 dado el vector de caracter√≠sticas X.
- Œ≤0 es el t√©rmino intercepto.
- Œ≤1 son los coeficientes del modelo.
""")

# Aqu√≠ puedes mostrar la f√≥rmula anterior y explicar cada componente. Tambi√©n ser√≠a √∫til incluir un diagrama que represente c√≥mo las variables independientes se combinan linealmente y se transforman mediante la funci√≥n sigmoide.

# Interpretaci√≥n de los Coeficientes
st.header("Interpretaci√≥n de los Coeficientes")

st.write("""
Los coeficientes Œ≤i indican la influencia de cada variable independiente en la probabilidad del resultado. Un coeficiente positivo significa que a medida que la variable aumenta, tambi√©n lo hace la probabilidad de que Y sea 1.
""")

# Estimaci√≥n de Par√°metros
st.header("Estimaci√≥n de Par√°metros")

st.write("""
Para encontrar los valores √≥ptimos de Œ≤, se utiliza el m√©todo de **M√°xima Verosimilitud**, que busca maximizar la probabilidad de observar los datos dados los par√°metros del modelo.
""")

col1, col2, col3 = st.columns([1, 2, 1])
with col1:
    st.write('')

with col2:
    st.image("static/regresion_logistica/max_verosimi.png")
with col3:
    st.write('')

st.write("Se busca maximizar ùêø(ùúÉ), lo que significa encontrar los valores de ùúÉ que hacen m√°s probable la observaci√≥n de los datos")

col1, col2, col3 = st.columns([1, 2, 1])
with col1:
    st.write('')

with col2:
    st.image("static/regresion_logistica/maxverosim1.png")
with col3:
    st.write('')

st.write("Muestra c√≥mo cambia ùêø(ùúÉ) en funci√≥n de los valores posibles de ùúÉ. El pico representa el valor √≥ptimo de ùúÉ, donde la probabilidad de observar los datos es m√°xima.")



# Aqu√≠ puedes incluir la funci√≥n de verosimilitud y explicar brevemente el proceso de optimizaci√≥n.

# Registrar Probabilidades
st.header("Registrar Probabilidades")

st.write("""
El modelo logit tambi√©n puede determinar la relaci√≥n entre el √©xito y el fracaso o registrar las probabilidades.
""")

col1, col2, col3 = st.columns([1, 2, 1])
with col1:
    st.write('')

with col2:
    st.image("static/regresion_logistica/probabilidad.png")
    st.write("""
*Aqu√≠, p representa la probabilidad de √©xito, y 1-p la probabilidad de fracaso.*
""")
with col3:
    st.write('')

st.write("Esta funci√≥n transforma valores de probabilidades (entre 0 y 1) en valores que pueden ir desde ‚àí‚àû hasta +‚àû. Esto permite que el modelo lineal ajuste mejor los datos en contextos probabil√≠sticos")



st.write("Muestra c√≥mo la funci√≥n logit mapea probabilidades peque√±as (p cerca de 0) en valores negativos grandes y probabilidades altas (p cerca de 1) en valores positivos grandes. La funci√≥n es sim√©trica respecto al punto medio (p = 0.5).")

# Tipos de Regresi√≥n Log√≠stica
st.header("Tipos de Regresi√≥n Log√≠stica")

st.write("""
Hay tres enfoques para el an√°lisis de regresi√≥n log√≠stica basados en los resultados de la variable dependiente.
""")

st.subheader("Regresi√≥n Log√≠stica Binaria")

st.write("""
Funciona bien para problemas de clasificaci√≥n binaria que solo tienen dos resultados posibles. La variable dependiente solo puede tener dos valores, como s√≠ y no o 0 y 1.
""")

col1, col2, col3 = st.columns([1, 3, 1])
with col1:
    st.write('')

with col2:
    st.image("static/regresion_logistica/regresion_binaria.png")
with col3:
    st.write('')

st.write("Cada gr√°fico muestra c√≥mo el modelo clasifica puntos en dos categor√≠as (rojo y azul) con diferentes niveles de ajuste o complejidad.")

st.subheader("Regresi√≥n Log√≠stica Multinomial")

st.write("""
Puede analizar problemas que tienen varios resultados posibles, siempre y cuando el n√∫mero de resultados sea finito. funciona mapeando los valores de resultado con diferentes valores entre 0 y 1. Como la funci√≥n log√≠stica puede devolver un rango de datos continuos, como 0,1, 0,11, 0,12, etc., la regresi√≥n multinomial tambi√©n agrupa el resultado a los valores m√°s cercanos posibles.
""")

col1, col2, col3 = st.columns([1, 3, 1])
with col1:
    st.write('')

with col2:
    st.image("static/regresion_logistica/formula_regresion_multi.jpg")
with col3:
    st.write('')

col1, col2, col3 = st.columns([1, 3, 1])
with col1:
    st.write('')

with col2:
    st.image("static/regresion_logistica/regresion_multinomial.png")
with col3:
    st.write('')

st.write("Muestra c√≥mo el modelo divide el espacio en regiones, asignando cada punto a una clase (colores diferentes) seg√∫n su probabilidad calculada.")

# st.subheader("Regresi√≥n Log√≠stica Ordinal")

# st.write("""
# Es un tipo especial de regresi√≥n multinomial para problemas en los que los n√∫meros representan rangos en lugar de valores reales. Por ejemplo, puede utilizar la regresi√≥n ordinal para predecir la respuesta a una pregunta de una encuesta en la que se pide a los clientes que clasifiquen su servicio como malo, regular, bueno o excelente en funci√≥n de un valor num√©rico, como el n√∫mero de art√≠culos que le han comprado a lo largo del a√±o.
# """)

# Evaluaci√≥n del Modelo
st.header("Evaluaci√≥n del Modelo")

st.write("""
Es fundamental evaluar el desempe√±o del modelo utilizando m√©tricas adecuadas:
""")

st.subheader("Matriz de Confusi√≥n")

st.write("""
Resume las predicciones correctas e incorrectas en cada clase.
""")

col1, col2, col3 = st.columns([1, 2, 1])
with col1:
    st.write('')

with col2:
    st.image("static/regresion_logistica/matriz_confusion.png")
with col3:
    st.write('')

st.write("Cada columna de la matriz representa el n√∫mero de predicciones de cada clase, mientras que cada fila representa a las instancias en la clase real., o sea en t√©rminos pr√°cticos nos permite ver  qu√© tipos de aciertos y errores est√° teniendo nuestro modelo a la hora de pasar por el proceso de aprendizaje con los datos.")

# Incluir una tabla que represente una matriz de confusi√≥n.

st.subheader("Exactitud, Precisi√≥n, Recall y F1-Score")

st.subheader("Exactitud (Accuracy)")
st.write("Es la proporci√≥n de predicciones totales que el modelo acert√≥; mide con qu√© frecuencia el modelo clasifica correctamente tanto casos positivos como negativos.")

st.subheader("Precisi√≥n")
st.write("Es la proporci√≥n de predicciones positivas que realmente son correctas; indica la exactitud de las predicciones positivas del modelo.")

st.subheader("Recall")
st.write("Es la proporci√≥n de casos positivos reales que el modelo identific√≥ correctamente; refleja la capacidad del modelo para encontrar todos los casos positivos.")

st.subheader("F1-Score")
st.write("Es la media arm√≥nica entre precisi√≥n y recall; proporciona un equilibrio entre ambos, especialmente √∫til cuando existe un desequilibrio entre clases.")

st.subheader("F√≥rmulas")
col1, col2 = st.columns([1, 1])
with col1:
    st.image("static/regresion_logistica/formulas_metricas.png")

with col2:
    st.write("""
    *donde:*

    - TP: True Positive, son instancias positivas correctamente clasificadas.
    - TN: True Negative, son instancias negativas correctamente clasificadas
    - FP: False Positive, son instancias negativas incorrectamente clasificadas como positivas
    - FP: False Negative, son instancias positivas incorrectamente clasificadas como negativas.

    """)

# Aqu√≠ puedes mostrar las f√≥rmulas de estas m√©tricas y, si es posible, gr√°ficos que ayuden a ilustrar su interpretaci√≥n.

# Ventajas y Limitaciones
st.header("Ventajas y Limitaciones")

st.subheader("Ventajas")

st.write("""
- Simple de implementar y interpretar.
- Eficiente para problemas de clasificaci√≥n binaria.
- Probabilidades de salida interpretables.
""")

st.subheader("Limitaciones")

st.write("""
- No maneja bien relaciones no lineales a menos que se incorporen t√©rminos polin√≥micos o interacciones.
- Sensible a outliers.
""")

# Aplicaciones de la Regresi√≥n Log√≠stica
st.header("Aplicaciones de la Regresi√≥n Log√≠stica")

st.write("""
La regresi√≥n log√≠stica es ampliamente utilizada en diversos campos:
""")

st.write("""
- **Medicina**: Predicci√≥n de la presencia o ausencia de una enfermedad.
- **Finanzas**: Evaluaci√≥n de la probabilidad de incumplimiento de cr√©dito.
- **Marketing**: Determinar si un cliente realizar√° una compra.
- **Seguridad**: Detecci√≥n de spam o correos electr√≥nicos fraudulentos.
""")

st.subheader("Regresi√≥n log√≠stica vs. regresi√≥n lineal")

st.write("La regresi√≥n lineal predice una variable dependiente continua mediante el uso de un conjunto dado de variables independientes. Una variable continua puede tener un rango de valores, como el precio o la antig√ºedad. Por lo tanto, la regresi√≥n lineal puede predecir los valores reales de la variable dependiente. Puede responder a preguntas como ¬øCu√°l ser√° el precio del arroz despu√©s de 10 a√±os? A diferencia de la regresi√≥n lineal, la regresi√≥n log√≠stica es un algoritmo de clasificaci√≥n. No puede predecir los valores reales de los datos continuos. Puede responder a preguntas como ¬øAumentar√° el precio del arroz un 50 % en 10 a√±os?")
# Incluir ejemplos gr√°ficos o casos de uso espec√≠ficos puede ayudar a ilustrar estas aplicaciones.